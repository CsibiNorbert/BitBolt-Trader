@using Microsoft.AspNetCore.Components.Web
@namespace BitcoinTradingBot.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BitcoinTradingBot.Web.styles.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <!-- TradingView Lightweight Charts -->
    <script src="https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js"></script>
    
    <script>
        let chart = null;
        let candlestickSeries = null;
        
        window.initializeTradingViewChart = function(containerId, data) {
            try {
                const container = document.getElementById(containerId);
                if (!container) {
                    console.error('Chart container not found:', containerId);
                    return;
                }
                
                // Create chart
                chart = LightweightCharts.createChart(container, {
                    width: container.clientWidth,
                    height: container.clientHeight,
                    layout: {
                        background: { type: 'solid', color: '#1a1a1a' },
                        textColor: '#d1d4dc',
                    },
                    grid: {
                        vertLines: { color: '#2B2B43' },
                        horzLines: { color: '#2B2B43' },
                    },
                    crosshair: {
                        mode: LightweightCharts.CrosshairMode.Normal,
                    },
                    rightPriceScale: {
                        borderColor: '#485c7b',
                    },
                    timeScale: {
                        borderColor: '#485c7b',
                        timeVisible: true,
                        secondsVisible: false,
                    },
                });
                
                // Add candlestick series
                candlestickSeries = chart.addCandlestickSeries({
                    upColor: '#26a69a',
                    downColor: '#ef5350',
                    borderVisible: false,
                    wickUpColor: '#26a69a',
                    wickDownColor: '#ef5350',
                });
                
                // Set initial data
                if (data && data.length > 0) {
                    candlestickSeries.setData(data);
                }
                
                // Handle resize
                window.addEventListener('resize', () => {
                    if (chart && container) {
                        chart.applyOptions({
                            width: container.clientWidth,
                            height: container.clientHeight,
                        });
                    }
                });
                
                console.log('TradingView chart initialized successfully');
            } catch (error) {
                console.error('Failed to initialize TradingView chart:', error);
            }
        };
        
        window.updateTradingViewChart = function(newData) {
            try {
                if (candlestickSeries && newData) {
                    candlestickSeries.update(newData);
                }
            } catch (error) {
                console.error('Failed to update TradingView chart:', error);
            }
        };
    </script>
</body>
</html>
